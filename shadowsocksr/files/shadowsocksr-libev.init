#!/bin/sh /etc/rc.common
#
# Copyright (C) 2017-2019 Yousong Zhou <yszhou4tech@gmail.com>
#
# This is free software, licensed under the GNU General Public License v3.
# See /LICENSE for more information.
#

USE_PROCD=1
START=99

NAME=shadowsocksr
CONFIG_FILE=/var/etc/shadowsocksr-libev/ssr_redir.json
SSR_REDIR=/usr/bin/ssr-redir

ssr_mk_config_file() {
	cat <<-EOF >$CONFIG_FILE
		{
		    "server": "$(uci_get ${NAME} $1 server)",
		    "server_port": $(uci_get ${NAME} $1 server_port),
		    "local_address": "$(uci_get ${NAME} global local_address)",
			"local_port": 1080,
		    "password": "$(uci_get ${NAME} $1 password)",
		    "timeout": $(uci_get ${NAME} global time_out),
		    "method": "$(uci_get ${NAME} $1 method)",
		    "protocol": "$(uci_get ${NAME} $1 protocol)",
		    "protocol_param": "$(uci_get ${NAME} $1 protocol_param)",
		    "obfs": "$(uci_get ${NAME} $1 obfs)",
		    "obfs_param": "$(uci_get ${NAME} $1 obfs_param)"
		}
EOF
	echo "generate ssr config"
}

ssr_xxx() {
	local server_cfg="nil"

	[ -x $SSR_REDIR ] || return
	
	server_cfg=$(uci_get shadowsocksr global server)
	echo "start ssr"
#	[ "$(uci_get shadowsocksr global disabled )" = 0 ] || return
#	[ "${server_cfg}" != "nil" ] || return

	ssr_mk_config_file $server_cfg

	procd_open_instance
	procd_set_param command "$SSR_REDIR" -c "$CONFIG_FILE"
	procd_set_param file "$CONFIG_FILE"
	procd_set_param respawn
	procd_close_instance

	return
}

start_service() {
	mkdir -p /var/etc/shadowsocksr-libev
	
	ssr_xxx
#	ssr_rules
}

stop_service() {
	rm -rf /var/etc/shadowsocksr-libev
}

service_triggers() {
	procd_add_reload_interface_trigger wan
	procd_add_reload_trigger shadowsocksr
}
